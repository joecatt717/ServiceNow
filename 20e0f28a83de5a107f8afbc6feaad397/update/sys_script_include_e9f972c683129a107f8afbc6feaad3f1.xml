<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1579565_cmdb_a_1.AttrExtensionUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utility class for functions associated with settup of the Attribute Extension application</description>
        <mobile_callable>false</mobile_callable>
        <name>AttrExtensionUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var AttrExtensionUtils = Class.create();
AttrExtensionUtils.prototype = {
    initialize: function() {
		this.error_code = '';
    },

	process: function() {
		// var list = this._getAttrExtensionTables();
		var list = this._getAttrExtensionTables();
		return list;
	},

	_getAttrExtensionTables: function() {
		var list = [];
		list.push(AttrExtensionConstants.ATTRIBUTE_TYPE.BASE_TABLE.NAME);
		var attr_extension_table_gr = new GlideRecord('sys_db_object');
		attr_extension_table_gr.addQuery('super_class', AttrExtensionConstants.ATTRIBUTE_TYPE.BASE_TABLE.ID);
		attr_extension_table_gr.query();

		while (attr_extension_table_gr.next()) {
			list.push(attr_extension_table_gr.getValue('name'));
		}
		return list;
	},

	// Returns a bool value T/F for whether the attribute type record is valid or not
	// IF INVALID - Writes to this.error_code with description of why the record is invalid
	validateAttributeType: function(attribute_type_gr) {
		if(!this._validateTable(attribute_type_gr.getValue('table'))) return false;
		if(!this._validateRecordIsUnique(attribute_type_gr)) return false;

		return true;
	},

	_validateTable: function(table_name) {
		var base_table_name = AttrExtensionConstants.ATTRIBUTE_TYPE.BASE_TABLE.NAME;

		// Get the dictionary record for the table and check if valid
		var dictionary_gr = new GlideRecord('sys_db_object');
		dictionary_gr.addQuery('name', table_name);
		dictionary_gr.setLimit(1);
		dictionary_gr.query();

		if (dictionary_gr.next()) {
			if (dictionary_gr.name == base_table_name) return true;
			if (dictionary_gr.super_class.name == base_table_name) return true;
		} else {
			this.error_code += 'System could not find the selected table.';
		}

		this.error_code += 'The selected table must be extended from the Standard Attribute Extension Table.';
		return false;
	},

	_validateRecordIsUnique: function(attribute_type_gr) {
		if (!this._validateUniqueRecordByAttribute(attribute_type_gr, 'table')) return false;
		if (!this._validateUniqueRecordByAttribute(attribute_type_gr, 'name')) return false;

		return true;
	},

	_validateUniqueRecordByAttribute: function(current_attribute_type_record, attribute) {
		var new_attribute_type_gr = new GlideRecord('x_1579565_cmdb_a_1_extended_attribute_type');
		var unique_id = current_attribute_type_record.getUniqueValue();

		if (unique_id != '') new_attribute_type_gr.addQuery('sys_id', '!=', unique_id);
		new_attribute_type_gr.addQuery(attribute, current_attribute_type_record.getValue(attribute));
		new_attribute_type_gr.query();

		var record_count = new_attribute_type_gr.getRowCount();
		if (record_count == 0) return true;

		this.error_code += 'Duplicate records were found - matching on the "' + attribute + '" field.';
		return false;
	},

	isExtensionRecordUnique: function(current_record) {
		var table = current_record.table;
		var record = current_record.record;
		var type = current_record.attribute_extension_type;
		var rule = current_record.attribute_extension_rule;

		var attribute_extension_gr = new GlideRecord('x_1579565_cmdb_a_1_standard_attribute_extension');
		attribute_extension_gr.addQuery('table', table);
		attribute_extension_gr.addQuery('record', record);
		attribute_extension_gr.addQuery('attribute_extension_type', type);
		attribute_extension_gr.addQuery('attribute_extension_rule', rule);
		attribute_extension_gr.addQuery('sys_id', '!=', current_record.getUniqueValue());
		attribute_extension_gr.query();

		var count = attribute_extension_gr.getRowCount();
		if(count == 0) return true;

		this.error_code = 'Attribute Extensions must be unique - an attribute extesnsion of this type already exists for the associated record';
		return false;
	},

	getExtensionRuleReferenceFields: function(table_name) {
		var dictionary = new GlideRecord('sys_dictionary');
		dictionary.addQuery('internal_type', 'reference');
		dictionary.addQuery('name', table_name);
		dictionary.query();

		var reference_field_ids = [];
		while(dictionary.next()) {
			reference_field_ids.push(dictionary.getUniqueValue())
		}

		return 'sys_idIN' + reference_field_ids;
	},

    type: 'AttrExtensionUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-07 15:45:41</sys_created_on>
        <sys_id>e9f972c683129a107f8afbc6feaad3f1</sys_id>
        <sys_mod_count>80</sys_mod_count>
        <sys_name>AttrExtensionUtils</sys_name>
        <sys_package display_value="Attribute Extension Tool" source="x_1579565_cmdb_a_1">20e0f28a83de5a107f8afbc6feaad397</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Attribute Extension Tool">20e0f28a83de5a107f8afbc6feaad397</sys_scope>
        <sys_update_name>sys_script_include_e9f972c683129a107f8afbc6feaad3f1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-11 04:50:13</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e9f972c683129a107f8afbc6feaad3f1</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-07 15:45:41</sys_created_on>
        <sys_id>de2b72c683129a107f8afbc6feaad344</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-07 15:45:41</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
